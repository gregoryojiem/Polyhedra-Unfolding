@page "/"

<PageTitle>Main</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<br/>
3D buttons 
<button @onclick="OnFlattenClick">See flattened polyhedra</button>
<button @onclick="OnSwapViewClick">Swap 2D/3D view</button>

<br/>
2D Buttons 
<button @onclick="OnStepButtonClick">Step through algorithm</button>
<button @onclick="OnUndoButtonClick">Undo Step</button>
<button @onclick="OnUnplacedButtonClick">Unplaced polygon visibility</button>

<script type="module" src="renderer.js"></script>

@inject IJSRuntime JSRuntime
@using Unfolding.Client.Polyhedra

@code {
    protected override async Task OnAfterRenderAsync(bool begunRender)
    {
        if (begunRender)
        {
            var currentView = PolyMain.currentView;

            if (currentView == "2D")
            {
                var data2D = PolyMain.GetPolygonsJSON();
                await JSRuntime.InvokeVoidAsync("handleRendering2D", data2D);
            }
            else if (currentView == "3D")
            {
                var polyhedronJSON = PolyMain.GetPolyhedron().GetPolyhedraJSON();
                await JSRuntime.InvokeVoidAsync("handleRendering3D", polyhedronJSON);
            }

            StateHasChanged();
        }
    }

    private async Task OnFlattenClick()
    {
        PolyMain.FlattenToggle();
        await OnAfterRenderAsync(true);
        StateHasChanged();
    }

    private async Task OnSwapViewClick()
    {
        PolyMain.SwapView();
        await OnAfterRenderAsync(true);
        StateHasChanged();
    }

    private async Task OnStepButtonClick()
    {
        PolyMain.PerformStep();
        await OnAfterRenderAsync(true);
        StateHasChanged();
    }

    private async Task OnUndoButtonClick()
    {
        PolyMain.UndoStep();
        await OnAfterRenderAsync(true);
        StateHasChanged();
    }

    private async Task OnUnplacedButtonClick()
    {
        PolyMain.UnplacedVisibilityToggle();
        await OnAfterRenderAsync(true);
        StateHasChanged();
    }
}